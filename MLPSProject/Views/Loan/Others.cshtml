@model MLPSProject.Models.PropertyDetail

@{
    /**/

    ViewBag.Title = "Others";
    Layout = "~/Views/Shared/_CustomerHomePageLayout.cshtml";
}

<head>
    <style>
        #dd {
            margin-right: 155.5px !important;
        }
    </style>
</head>

@*<h2>Others</h2>*@

@using (Html.BeginForm("Others", "Loan", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" align="center">
    <h4>Property Details</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
        @Html.LabelFor(model => model.LoanDetail.vName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LoanDetail.vName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LoanDetail.vName, "", new { @class = "text-danger" })
        </div>
    </div>*@


    <div class="form-group">
        @Html.LabelFor(model => model.vPropertyHolderName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.vPropertyHolderName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.vPropertyHolderName, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.vPropertyType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
            List<SelectListItem>
                listItems = new List<SelectListItem>
                    ();
                    listItems.Add(new SelectListItem
                    {
                    Text = "Independent House",
                    Value = "Independent House"
                    });
                    listItems.Add(new SelectListItem
                    {
                    Text = "Duplex House",
                    Value = "Duplex House"
                    });
                    listItems.Add(new SelectListItem
                    {
                    Text = "Triplex House",
                    Value = "Triplex House"
                    });
                    }
                    @Html.DropDownListFor(model => model.vPropertyType, listItems, "--Select Loan Type--", new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.vPropertyType, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.PropertyAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PropertyAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PropertyAddress, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.IdProof, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-3">

            @*@Html.EditorFor(model => model.PropertyDetail.IdProof, new { htmlAttributes = new { @class = "form-control" } })*@

            <input type="file" name="IdProofDoc" />
            @*@Html.EditorFor(model => model.IdProof, new { htmlAttributes = new { @class = "form-control", type = "file" } })*@
            @Html.ValidationMessageFor(model => model.IdProof, "", new { @class = "text-danger" })

        </div>
        @*<div class="col-md-7">
            <input type="button" onclick="@(" window.location.href='" + @Url.Action("UploadIDProof", "Loan") + "' ");" name="ImageFile" class="btn btn-sm" value="Upload" />
        </div>*@
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AddressProof, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <input type="file" name="AddressProofDoc" />
            @*@Html.EditorFor(model => model.AddressProof, new { htmlAttributes = new { @class = "form-control", type = "file" } })*@
            @Html.ValidationMessageFor(model => model.AddressProof, "", new { @class = "text-danger" })
        </div>
        @*<div class="col-md-7">
            <input type="button" onclick="@(" window.location.href='" + @Url.Action("UploadIDProof1", "Loan") +"' ");" class="btn btn-sm" value="Upload" />
        </div>*@
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.PropertyAgreement, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-3">
            <input type="file" name="PropertyAgreementDoc" />
            @*@Html.EditorFor(model => model.PropertyAgreement, new { htmlAttributes = new { @class = "form-control", type = "file" } })*@
            @Html.ValidationMessageFor(model => model.PropertyAgreement, "", new { @class = "text-danger" })
        </div>
        @*<div class="col-md-7">
            <input type="button" onclick="@(" window.location.href='" + @Url.Action("UploadIDProof2", "Loan") + "' ");" class="btn btn-sm" value="Upload" />
        </div>*@

    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-default" />
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10 text-success">
            @ViewBag.UploadStatus
        </div>
    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
